# Create-and-Manage-Cloud-Resources-Challenge-Lab
100 % Correct Solution and Updated Labs

Track 1 : Quest 2 | Create and Manage Cloud Resources: Challenge Lab | Qwiklabs GSP313

# Task 1. Create a project jumphost instance

Please navigate to the compute engine > VM instance & click on create instance. 
  Instance Name: As mentioned in the lab instruction 
  Machine type: N1 (f1-macro) Do not change the other settings just click on the create.
  
  
*******************************************************************************************************
# Task 2. Create a Kubernetes service cluster

gcloud container clusters create nucleus-backend \
          --num-nodes 1 \
          --network nucleus-vpc \
          --region us-east1-b
          
          
gcloud container clusters get-credentials nucleus-backend \
          --region us-east1-b


kubectl create deployment hello-server \
          --image=gcr.io/google-samples/hello-app:2.0


kubectl expose deployment hello-server \
          --type=LoadBalancer \
          --port <Use port given in the lab>
 

*******************************************************************************************************

# Task 3. Set up an HTTP load balancer
    
cat << EOF > startup.sh
#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
EOF
  
You need to:

Create an instance template.
Create a target pool.
Create a managed instance group.
Create a firewall rule named as Firewall rule to allow traffic (80/tcp).
Create a health check.
Create a backend service, and attach the managed instance group with named port (http:80).
Create a URL map, and target the HTTP proxy to route requests to your URL map.
Create a forwarding rule.

  

gcloud compute instance-templates create web-server-template \
       --metadata-from-file startup-script=startup.sh \
       --network nucleus-vpc \
       --machine-type g1-small \
       --region us-east1

  
gcloud compute target-pools create nginx-pool

  
gcloud compute instance-groups managed create web-server-group \
       --base-instance-name web-server \
       --size 2 \
       --template web-server-template \
       --region us-east1

  
gcloud compute firewall-rules create <Copy FIREWALL_NAME given in the lab> \
       --allow tcp:80 \
       --network nucleus-vpc

  
gcloud compute http-health-checks create http-basic-check

  
gcloud compute instance-groups managed \
       set-named-ports web-server-group \
       --named-ports http:80 \
       --region us-east1

  
gcloud compute backend-services create web-server-backend \
       --protocol HTTP \
       --http-health-checks http-basic-check \
       --global

  
gcloud compute backend-services add-backend web-server-backend \
       --instance-group web-server-group \
       --instance-group-region us-east1 \
       --global

  
gcloud compute url-maps create web-server-map \
       --default-service web-server-backend

  
gcloud compute target-http-proxies create http-lb-proxy \
       --url-map web-server-map

  
gcloud compute forwarding-rules create permit-tcp-rule-261 \
     --global \
     --target-http-proxy http-lb-proxy \
     --ports 80
  
  
gcloud compute forwarding-rules list

*****************************************************************************************
