Deploy to Kubernetes in Google Cloud: Challenge Lab

#Track 1 : Skill Badge 4: Deploy to Kubernetes in Google Cloud: Challenge Lab


#TASK 1 : Create a Docker image and store the Dockerfile

source <(gsutil cat gs://cloud-training/gsp318/marking/setup_marking_v2.sh)
gcloud source repos clone valkyrie-app --project=qwiklabs-gcp-00-e572d84a2f7d [Your Project Id]
cd valkyrie-app
cat > Dockerfile <<EOF
docker build -t valkyrie-app:v0.0.3 . [AS PER YOUR NAME AND NUMBER]
cd ..
./step1_v2.sh



#TASK 2 : Test the created Docker image

docker run -p 8080:8080 valkyrie-app:v0.0.3 & [change name and number as per your lab names]
./step2_v2.sh



#TASK 3 : Push the Docker image in the Container Repository

docker tag valkyrie-app:v0.0.3 gcr.io/qwiklabs-gcp-00-e572d84a2f7d/valkyrie-app:v0.0.3   [change name and number as per your lab names]
docker push gcr.io/qwiklabs-gcp-00-e572d84a2f7d/valkyrie-app:v0.0.3         [change name and number as per your lab names]



#TASK 4: Create and expose a deployment in Kubernetes

gcloud container clusters get-credentials valkyrie-dev --zone us-east1-d
cd valkyrie-dev
sed -i s#IMAGE_HERE#gcr.io/qwiklabs-gcp-00-e572d84a2f7d/valkyrie-app:v0.0.3#g k8s/deployment.yaml [Change your project id]
kubectl create -f k8s/deployment.yaml
kubectl create -f k8s/service.yaml


#TASK 5 : Update the deployment with a new version of valkyrie-app


git merge origin/kurt-dev
kubectl edit deployment valkyrie-dev

docker build -t gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.4 .             [change name and number as per your lab names]
docker push gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.4            [change name and number as per your lab names]
kubectl edit deployment valkyrie-dev



#TASK 6 : Create a pipeline in Jenkins to deploy your app

docker ps
docker kill container_id

export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/component=jenkins-master" -l "app.kubernetes.io/instance=cd" -o jsonpath="{.items[0].metadata.name}")
kubectl port-forward $POD_NAME 8080:8080 >> /dev/null &
printf $(kubectl get secret cd-jenkins -o jsonpath="{.data.jenkins-admin-password}" | base64 --decode);echo

gcloud source repos list

sed -i "s/green/orange/g" source/html.go
sed -i "s/YOUR_PROJECT/$GOOGLE_CLOUD_PROJECT/g" Jenkinsfile
git config --global user.email "you@example.com"    
git config --global user.name "student"               
git add .
git commit -m "built pipeline init"
git push

***************************************Congratulations*************************************************************************
